{"version":3,"sources":["Recipe.js","App.js","reportWebVitals.js","index.js"],"names":["Recipe","props","name","src","img","alt","ingredients","map","ingredient","text","App","useState","recipes","setRecipes","search","setSearch","query","setQuery","useEffect","a","getRecipes","fetch","response","json","data","console","log","hits","className","onSubmit","e","preventDefault","type","value","onChange","target","recipe","label","image","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPAiBeA,EAdA,SAACC,GACZ,OACI,gCACI,6BAAKA,EAAMC,OACX,qBAAKC,IAAKF,EAAMG,IAAKC,IAAI,KACzB,6BACKJ,EAAMK,YAAYC,KAAI,SAAAC,GAAU,OAC7B,6BAAKA,EAAWC,gBCuCrBC,MA9Cf,WAEE,IAGA,EAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAAyBJ,mBAAS,WAAlC,mBAAOK,EAAP,KAAaC,EAAb,KAEAC,oBAAS,sBAAE,sBAAAC,EAAA,sDACTC,IADS,2CAER,CAACJ,IAEJ,IAAMI,EAAU,uCAAG,8BAAAD,EAAA,sEACME,MAAM,mCAAD,OAAoCL,EAApC,mBAZf,WAYe,oBAXf,qCAUI,cACXM,EADW,gBAEEA,EAASC,OAFX,OAEXC,EAFW,OAGjBC,QAAQC,IAAIF,GACZX,EAAWW,EAAKG,MAJC,2CAAH,qDAiBhB,OACE,sBAAKC,UAAU,MAAf,UACE,uBAAMC,SAPQ,SAAAC,GAChBA,EAAEC,iBACFd,EAASH,IAKoBc,UAAU,cAArC,UACE,uBAAOI,KAAK,OAAOJ,UAAU,aAAaK,MAAOnB,EAAQoB,SAb1C,SAAAJ,GACnBf,EAAUe,EAAEK,OAAOF,OACnBR,QAAQC,IAAIZ,MAYR,wBAAQkB,KAAK,SAASJ,UAAU,gBAAhC,uBAEF,qBAAKA,UAAU,SAAf,SACChB,EAAQL,KAAI,SAAA6B,GAAM,OAChB,cAAC,EAAD,CAAkClC,KAAMkC,EAAOA,OAAOC,MAAOjC,IAAKgC,EAAOA,OAAOE,MAAOhC,YAAa8B,EAAOA,OAAO9B,aAArG8B,EAAOA,OAAOC,gBC7BrBE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6f323e86.chunk.js","sourcesContent":["import React from 'react';\nimport './App';\n\nconst Recipe = (props) => {\n    return(\n        <div >\n            <h1>{props.name}</h1>\n            <img src={props.img} alt=\"\" />\n            <ol>\n                {props.ingredients.map(ingredient => (\n                    <li>{ingredient.text}</li>\n                ))}\n            </ol>\n        </div>\n    );\n}\n\nexport default Recipe;","import './App.css';\nimport React,{useEffect,useState} from 'react';\nimport Recipe from './Recipe';\nfunction App() {\n\n  const APP_ID = 'cc4ab295';\n  const APP_KEY= 'db0730d0d85392edbcc2161e1b133f2b';\n\n  const [recipes, setRecipes] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [query,setQuery] = useState(\"Chicken\")\n\n  useEffect( async ()=> {\n    getRecipes();\n  }, [query])\n\n  const getRecipes = async () => {\n    const response = await fetch(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`);\n    const data = await response.json();\n    console.log(data);\n    setRecipes(data.hits);\n  }\n\n  const updateSearch = e => {\n    setSearch(e.target.value);\n    console.log(search);\n  }\n\n  const getSearch = e => {\n    e.preventDefault();\n    setQuery(search);\n  }\n\n  return (\n    <div className='App'>\n      <form onSubmit={getSearch} className=\"search-form\">\n        <input type=\"text\" className=\"search-bar\" value={search} onChange={updateSearch}/>\n        <button type=\"submit\" className=\"search-button\">Submit</button>\n      </form>\n      <div className=\"recipe\">\n      {recipes.map(recipe => (\n         <Recipe key={recipe.recipe.label} name={recipe.recipe.label} img={recipe.recipe.image} ingredients={recipe.recipe.ingredients}></Recipe>\n      ))}\n      </div>\n      \n    </div> \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}